load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "controller.go",
        "sync.go",
    ],
    importpath = "github.com/jetstack/cert-manager/pkg/controller/issuers",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/apis/certmanager/v1:go_default_library",
        "//pkg/client/clientset/versioned:go_default_library",
        "//pkg/controller:go_default_library",
        "//pkg/controller/internal/issuers:go_default_library",
        "//pkg/logs:go_default_library",
        "@com_github_go_logr_logr//:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@io_k8s_apimachinery//pkg/labels:go_default_library",
        "@io_k8s_apimachinery//pkg/util/errors:go_default_library",
        "@io_k8s_client_go//listers/core/v1:go_default_library",
        "@io_k8s_client_go//tools/cache:go_default_library",
        "@io_k8s_client_go//util/workqueue:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "controller_test.go",
        "sync_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/api/util:go_default_library",
        "//pkg/apis/certmanager/v1:go_default_library",
        "//pkg/apis/meta/v1:go_default_library",
        "//pkg/controller:go_default_library",
        "//pkg/controller/issuers/ca:go_default_library",
        "//pkg/controller/issuers/fake:go_default_library",
        "//pkg/controller/test:go_default_library",
        "//pkg/util:go_default_library",
        "//test/unit/gen:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_client_go//testing:go_default_library",
        "@io_k8s_utils//clock/testing:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//pkg/controller/issuers/acme:all-srcs",
        "//pkg/controller/issuers/ca:all-srcs",
        "//pkg/controller/issuers/fake:all-srcs",
        "//pkg/controller/issuers/selfsigned:all-srcs",
        "//pkg/controller/issuers/vault:all-srcs",
        "//pkg/controller/issuers/venafi:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
