# gazelle:prefix github.com/jetstack/cert-manager
# gazelle:proto disable_global
# gazelle:exclude docs/generated/reference/generate/json_swagger

load("@io_bazel_rules_docker//container:container.bzl", "container_bundle")
load("@io_bazel_rules_docker//contrib:push-all.bzl", "docker_push")

# export WORKSPACE so workspace_binary rules can be used outside the root
exports_files([
    "WORKSPACE",
    "LICENSE",
    "LICENSES",
    "go.mod",
    "go.sum",
])

genrule(
    name = "save_docker_version",
    outs = ["version"],
    cmd = "grep '^STABLE_DOCKER_TAG ' bazel-out/stable-status.txt | awk '{print $$2}' >$@",
    stamp = 1,
    visibility = ["//visibility:public"],
)

container_bundle(
    name = "images",
    images = {
        "{STABLE_DOCKER_REGISTRY}/cert-manager-controller:{STABLE_DOCKER_TAG}": "//build:controller.image",
        "{STABLE_DOCKER_REGISTRY}/cert-manager-acmesolver:{STABLE_DOCKER_TAG}": "//build:acmesolver.image",
        "{STABLE_DOCKER_REGISTRY}/cert-manager-webhook:{STABLE_DOCKER_TAG}": "//build:webhook.image",
        "{STABLE_DOCKER_REGISTRY}/cert-manager-cainjector:{STABLE_DOCKER_TAG}": "//build:cainjector.image",
    },
    tags = ["manual"],
)

docker_push(
    name = "images.push",
    bundle = ":images",
    tags = ["manual"],
)

filegroup(
    name = "package-srcs",
    srcs = glob(
        ["**"],
        exclude = [
            "bazel-*/**",
            ".git/**",
        ],
    ),
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
